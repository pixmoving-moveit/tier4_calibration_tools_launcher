<launch>
	<arg name="vehicle_model" default="robobus" description="vehicle model name"/>
	<arg name="sensor_model" default="robobus_sensor_kit" description="sensor model name"/>
	<arg name="config_dir" default="$(find-pkg-share $(var sensor_model)_description)/config" description="path to dir where sensors_calibration.yaml, etc. are located"/>
	<!-- <arg name="model_file_ouster" default="ouster.xacro" description="path to the file of model settings (*.xacro)"/> -->
	<let name="model_file" value="$(find-pkg-share tier4_vehicle_launch)/urdf/vehicle.xacro" />

  	<!-- vehicle description -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" exec="robot_state_publisher">
		<param name="robot_description" value="$(command 'xacro $(var model_file) vehicle_model:=$(var vehicle_model) sensor_model:=$(var sensor_model) config_dir:=$(var config_dir)' 'warn')"/>
	</node>

	<!-- ros2 run tf2_ros static_transform_publisher  -5.36292 0.0993889  -1.18594   0.0931827 -0.00678794   0.0015649 os_lidar_top os_lidar_ancillary -->
	<!-- ros2 run tf2_ros static_transform_publisher  -4.191  0.433 0.935 0.0522 0.0399 -0.001235  os_lidar_ancillary traffic_light_left_camera -->

	<group>
		<push-ros-namespace namespace="sensing"/>
		<group>
			<push-ros-namespace namespace="lidar"/>
			<group>
				<push-ros-namespace namespace="top"/>
				<include file="$(find-pkg-share robobus_sensor_kit_launch)/launch/ouster_top.composite.launch.py"/>
			</group>

			<group>
				<push-ros-namespace namespace="ancillary"/>
				<include file="$(find-pkg-share robobus_sensor_kit_launch)/launch/ouster_ancillary.composite.launch.py"/>
			</group>
		</group>
		<group>
			<push-ros-namespace namespace="camera"/>
			<group>
				<push-ros-namespace namespace="traffic_light"/>
				<include file="$(find-pkg-share robobus_sensor_kit_launch)/launch/spinnaker_camera_driver.launch.py" />
			</group>
	</group>
	</group>
</launch>
