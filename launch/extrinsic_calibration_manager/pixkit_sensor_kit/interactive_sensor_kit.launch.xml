<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="vehicle_id" default="default"/>
  <arg name="sensor_model" default="pixkit_sensor_kit"/>
  <!-- <arg name="parent_frame" default="sensor_kit_base_link"/> -->
  <arg name="parent_frame" default="base_link"/>
  <arg name="camera_name" default="traffic_light_left_camera"/>

  <let name="image_topic" value="/sensing/camera/traffic_light/image_raw" if="$(eval &quot;'$(var camera_name)' == 'traffic_light_left_camera' &quot;)"/>
  <let name="image_compressed_topic" value="/sensing/camera/traffic_light/image_raw/compressed" if="$(eval &quot;'$(var camera_name)' == 'traffic_light_left_camera' &quot;)"/>
  <let name="camera_info_topic" value="/sensing/camera/traffic_light/camera_info" if="$(eval &quot;'$(var camera_name)' == 'traffic_light_left_camera' &quot;)"/>

  <let name="pointcloud_topic" value="/sensing/lidar/top/ouster/points" if="$(eval &quot;'$(var camera_name)' == 'traffic_light_left_camera' &quot;)"/>

  <let name="calibrate_sensor" value="false"/>
  <let name="calibrate_sensor" value="true" if="$(eval &quot;'$(var camera_name)' == 'traffic_light_left_camera' &quot;)"/>

  <let name="camera_frame" value=""/>
  <let name="camera_frame" value="traffic_light_left_camera" if="$(eval &quot;'$(var camera_name)' == 'traffic_light_left_camera' &quot;)"/>

  <!-- extrinsic_calibration_client -->
  <arg name="src_yaml" default="$(find-pkg-share individual_params)/config/$(var vehicle_id)/$(var sensor_model)/sensor_kit_calibration.yaml"/>
  <arg name="dst_yaml" default="$(env HOME)/sensor_kit_calibration.yaml"/>

  <node pkg="extrinsic_calibration_client" exec="extrinsic_calibration_client" name="extrinsic_calibration_client" output="screen" if="$(var calibrate_sensor)">
    <param name="src_path" value="$(var src_yaml)"/>
    <param name="dst_path" value="$(var dst_yaml)"/>
  </node>

  <!-- extrinsic_calibration_manager -->
  <node pkg="extrinsic_calibration_manager" exec="extrinsic_calibration_manager" name="extrinsic_calibration_manager" output="screen" if="$(var calibrate_sensor)">
    <param name="parent_frame" value="$(var parent_frame)"/>
    <param name="child_frames" value="
    [$(var camera_frame)]"/>
  </node>

  <let name="image_rectified_topic" value="/sensing/camera/traffic_light/rectified/image_raw" if="$(eval &quot;'$(var camera_name)' == 'traffic_light_left_camera' &quot;)"/>
  <let name="camera_info_rectified_topic" value="/sensing/camera/traffic_light/rectified/camera_info" if="$(eval &quot;'$(var camera_name)' == 'traffic_light_left_camera' &quot;)"/>

  <!-- interactive calibrator -->
  <group if="$(var calibrate_sensor)">
    <push-ros-namespace namespace="$(var parent_frame)/$(var camera_frame)"/>

    <node pkg="extrinsic_interactive_calibrator" exec="interactive_calibrator" name="interactive_calibrator" output="screen">
      <remap from="pointcloud" to="$(var pointcloud_topic)"/>
      <remap from="image" to="$(var image_topic)"/>
      <remap from="camera_info" to="$(var camera_info_topic)"/>
      <remap from="calibration_points_input" to="calibration_points"/>

      <param name="camera_parent_frame" value="$(var parent_frame)"/>
      <param name="camera_frame" value="$(var camera_frame)"/>
      <param name="use_compressed" value="false"/>

    </node>

    <include file="$(find-pkg-share intrinsic_camera_calibration)/launch/optimizer.launch.xml"/>
  </group>
</launch>
